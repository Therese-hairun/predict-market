stages:
  - build
  - deploy

variables:
  API_URL_STAGING: "https://api-predict-market-staging.hairun-technology.com"

#--------------------------------RULES-------------------------------#
#DEV
.deploy_rules_dev:
  only: &deploy_rules_dev
    - develop
    - add-args

#PREPROD
.deploy_rules_preprod:
  only: &deploy_rules_preprod
    - preprod
    - add-args

#--------------------------------BUILD--------------------------------#
.build_image: &build_image
  stage: build
  image: docker:latest
  services:
    - docker:18.09-dind
  variables:
    USER: ""
    HOST: ""
    PATH_COMPOSE: ""
    CONTEXT_FOLDER: ""
    IMAGE: ""
    ARG: ""
    TAG: ""
    DOCKERFILE: ""
  before_script:
    - apk add --no-cache gzip bash
  script:
    - echo $ARG
    - docker build -t $IMAGE:$TAG $ARG -f $CONTEXT_FOLDER/$DOCKERFILE $CONTEXT_FOLDER
    - docker save $IMAGE:$TAG | gzip > $CI_PROJECT_DIR/${IMAGE}-${TAG}.tar.gz
  artifacts:
    paths:
      - ${IMAGE}-${TAG}.tar.gz
    expire_in: 1 week

#DEV
build_front_dev:
  stage: build
  only: *deploy_rules_dev
  <<: *build_image
  variables:
    USER: $DEPLOYMENT_USER
    HOST: $DEPLOYMENT_HOST
    PATH_COMPOSE: "/root/Hairun-Project/predictmarket-front-staging"
    CONTEXT_FOLDER: "."
    IMAGE: predict-market-web
    #ARG: '--build-arg API_URL=${API_URL_STAGING}'
    ARG: ""
    TAG: staging
    DOCKERFILE: "Dockerfile.dev"

#PREPROD
build_front_preprod:
  stage: build
  only: *deploy_rules_preprod
  <<: *build_image
  variables:
    USER: $DEPLOYMENT_USER
    HOST: $DEPLOYMENT_HOST
    PATH_COMPOSE: "/root/Hairun-Project/predictmarket-front-preprod"
    CONTEXT_FOLDER: "."
    IMAGE: predict-market-web
    #ARG: '--build-arg API_URL=${API_URL_STAGING}'
    ARG: ""
    TAG: preprod
    DOCKERFILE: "Dockerfile.preprod"

#------------------------------DEPLOY-------------------------------#
.deploy_all: &deploy_all
  stage: deploy
  image: alpine:latest
  services:
    - docker:18.09-dind
  variables:
    USER: ""
    HOST: ""
    PATH_COMPOSE: "."
    COMPOSE_FILE: ""
    IMAGE: ""
    TAG: ""
  before_script:
    - apk update
    - apk add --update openssh-client bash
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - scp ${IMAGE}-${TAG}.tar.gz $USER@$HOST:$PATH_COMPOSE/${IMAGE}-${TAG}.tar.gz
    - scp $COMPOSE_FILE $USER@$HOST:$PATH_COMPOSE/docker-compose.yml
    - ssh $USER@$HOST "cd $PATH_COMPOSE && docker load < ${IMAGE}-${TAG}.tar.gz && docker-compose up -d"

deploy_front_dev:
  stage: deploy
  only: *deploy_rules_dev
  <<: *deploy_all
  variables:
    USER: $DEPLOYMENT_USER
    HOST: $DEPLOYMENT_HOST
    PATH_COMPOSE: "/root/Hairun-Project/predictmarket-front-staging"
    COMPOSE_FILE: "docker-compose.staging.yml"
    IMAGE: predict-market-web
    TAG: staging

deploy_front_preprod:
  stage: deploy
  only: *deploy_rules_preprod
  <<: *deploy_all
  variables:
    USER: $DEPLOYMENT_USER
    HOST: $DEPLOYMENT_HOST
    PATH_COMPOSE: "/root/Hairun-Project/predictmarket-front-preprod"
    COMPOSE_FILE: "docker-ci-preprod.yml"
    IMAGE: predict-market-web
    TAG: preprod
