# Generated by Django 3.2.6 on 2021-11-17 13:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthtokenToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'authtoken_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KnoxAuthtoken',
            fields=[
                ('digest', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('salt', models.CharField(max_length=16, unique=True)),
                ('created', models.DateTimeField()),
                ('expiry', models.DateTimeField(blank=True, null=True)),
                ('token_key', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'knox_authtoken',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TastypieApiaccess',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=255)),
                ('url', models.TextField()),
                ('request_method', models.CharField(max_length=10)),
                ('accessed', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tastypie_apiaccess',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TastypieApikey',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=128)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'tastypie_apikey',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=80, unique=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('is_super_admin', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'admin',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_code', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('password', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('email_validation_code', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_validation_code', models.CharField(blank=True, max_length=255, null=True)),
                ('email_is_activated', models.BooleanField(default=False)),
                ('phone_is_activated', models.BooleanField(default=False)),
                ('account_is_active', models.BooleanField(default=False)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('storage_code_client', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('total_day', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CodeReductionAvailable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('expiry_at', models.DateTimeField(blank=True, null=True)),
                ('client_is_subscribed', models.BooleanField(default=False)),
                ('reduction', models.FloatField(blank=True, null=True)),
                ('clients', models.ManyToManyField(blank=True, null=True, to='predict.Client')),
            ],
            options={
                'db_table': 'code_reduction_available',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Couple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol_1', models.CharField(blank=True, max_length=255, null=True)),
                ('symbol_1_logo', models.ImageField(blank=True, max_length=255, null=True, upload_to='symbol_crypto')),
                ('symbol_2', models.CharField(blank=True, max_length=255, null=True)),
                ('symbol_2_logo', models.ImageField(blank=True, max_length=255, null=True, upload_to='symbol_crypto')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.BooleanField(default=True)),
                ('vues', models.IntegerField(blank=True, default=0, null=True)),
                ('precision', models.FloatField(blank=True, default=0.0, null=True)),
                ('is_authorised', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'couple',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum', models.FloatField(blank=True, null=True)),
                ('free_day', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('total_for_next_subscription', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reward',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('reduction', models.FloatField(blank=True, null=True)),
                ('number_couple_offered', models.BigIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('recommanded', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'subscribe',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.BooleanField(default=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.client')),
            ],
            options={
                'db_table': 'ticket',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TicketMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('date_message', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.ticket')),
            ],
            options={
                'db_table': 'ticket_message',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('renew_status', models.BooleanField(blank=True, null=True)),
                ('total_discount', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('couple_removed_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.client')),
                ('couples', models.ManyToManyField(blank=True, null=True, to='predict.Couple')),
                ('subscribe', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.subscribe')),
            ],
            options={
                'db_table': 'subscription',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SimpleRewardByRelationshipCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward_day_by_child', models.IntegerField(blank=True, default=0, null=True)),
                ('reward_credit_by_child', models.FloatField(blank=True, default=0.0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('client_child_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.client')),
            ],
            options={
                'db_table': 'simple_reward_by_relationship_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RelationshipCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.client')),
            ],
            options={
                'db_table': 'relationship_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.subscription')),
            ],
            options={
                'db_table': 'payment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_price', models.FloatField(blank=True, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('final_price', models.FloatField(blank=True, null=True)),
                ('nb_crypto_currency', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.payment')),
            ],
            options={
                'db_table': 'invoice',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_initial_user', models.FloatField(blank=True, null=True)),
                ('credit_added_user', models.DateTimeField(blank=True, null=True)),
                ('credit_deleted_user', models.FloatField(blank=True, null=True)),
                ('credit_final_user', models.FloatField(blank=True, null=True)),
                ('total_day_initial_user', models.IntegerField(blank=True, null=True)),
                ('day_added_user', models.IntegerField(blank=True, null=True)),
                ('day_deleted_user', models.IntegerField(blank=True, null=True)),
                ('total_day_final_user', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('admin', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='predict.admin')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.client')),
            ],
            options={
                'db_table': 'history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CoupleFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='predict.client')),
                ('couple', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='predict.couple')),
            ],
            options={
                'db_table': 'couple_favorite',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CoupleDemand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('couple', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('clients', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='predict.client')),
            ],
            options={
                'db_table': 'couple_demand',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CoupleAuthorized',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='predict.client')),
                ('couple', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='predict.couple')),
            ],
            options={
                'db_table': 'couple_authorized',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CodeReductionUsed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('used_date', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.client')),
                ('code_used', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.codereductionavailable')),
            ],
            options={
                'db_table': 'code_reduction_used',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='codereductionavailable',
            name='subscribes',
            field=models.ManyToManyField(blank=True, null=True, to='predict.Subscribe'),
        ),
        migrations.CreateModel(
            name='ClientToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('token_expiry', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.client')),
            ],
            options={
                'db_table': 'client_token',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClientPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('sms_code', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_date', models.DateTimeField(blank=True, null=True)),
                ('sms_expiry', models.DateTimeField(blank=True, null=True)),
                ('is_phone_active', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.client')),
            ],
            options={
                'db_table': 'client_phone',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='client',
            name='reward',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='predict.reward'),
        ),
    ]
